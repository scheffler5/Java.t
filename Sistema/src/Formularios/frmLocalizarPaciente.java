/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Formularios;

import DAO.PacienteDAO;
import DAO.ProntuarioDAO;
import Model.Pacientes;
import Model.Prontuario;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gabri
 */
public class frmLocalizarPaciente extends javax.swing.JFrame {
    
     private frmPEP frmPEP;
     public void setFrmPEP(frmPEP frmPEP) {
        this.frmPEP = frmPEP;
    }
    
     
     
    public void Listar(){
     ProntuarioDAO dao = new ProntuarioDAO();
     List<Prontuario> lista = dao.listar();
     DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
     dados.setNumRows(0);
     for(Prontuario u : lista){
         dados.addRow(new Object[]{
          u.getProntuario(),           
          u.getDado().getNome(),           
          u.getCla().getClassificacao(),   // Obtém a classificação
          u.getPre().getNome(),            // Obtém a preferência
          u.getTempoEspera() // Acessando o tempo de espera
         
         }
     

         );
     }}
    
    public frmLocalizarPaciente() {
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icon = new ImageIcon(getClass().getResource("/Images/istockphoto-1432473911-612x612.jpg"));
        Image image = icon.getImage();
        jPanel1 = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){
                g.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabela = new javax.swing.JTable();
        txt24 = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txtcrianca = new javax.swing.JCheckBox();
        txtidoso = new javax.swing.JCheckBox();
        txtgravida = new javax.swing.JCheckBox();
        txtadulto = new javax.swing.JCheckBox();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txtemer = new javax.swing.JCheckBox();
        txturgen = new javax.swing.JCheckBox();
        txtpouco = new javax.swing.JCheckBox();
        txtnaour = new javax.swing.JCheckBox();
        txtidade = new javax.swing.JTextField();
        txtnaocla = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        txtNome = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        txtPront = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Localizar Paciente");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        Tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prontuario", "Nome", "Classificação", "Preferencia", "Tempo de Espera (Em minutos)"
            }
        ));
        Tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabela);

        txt24.setText("Em Espera menos de 24 Horas");
        txt24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt24ActionPerformed(evt);
            }
        });

        jLabel1.setText("Por Idade");

        jLabel2.setText("Tempo");

        jLabel3.setText("Por Preferencia");

        txtcrianca.setText("Criança");
        txtcrianca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtcriancaActionPerformed(evt);
            }
        });

        txtidoso.setText("Idoso");
        txtidoso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidosoActionPerformed(evt);
            }
        });

        txtgravida.setText("Gravida");
        txtgravida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgravidaActionPerformed(evt);
            }
        });

        txtadulto.setText("Adulo");
        txtadulto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtadultoActionPerformed(evt);
            }
        });

        jLabel4.setText("Classificação de Risco");

        txtemer.setText("Emergencia");
        txtemer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemerActionPerformed(evt);
            }
        });

        txturgen.setText("Urgente");
        txturgen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txturgenActionPerformed(evt);
            }
        });

        txtpouco.setText("Pouco Urgente");
        txtpouco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtpoucoActionPerformed(evt);
            }
        });

        txtnaour.setText("Nao Urgente");
        txtnaour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnaourActionPerformed(evt);
            }
        });

        txtidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtidadeKeyReleased(evt);
            }
        });

        txtnaocla.setText("Não Classificados");
        txtnaocla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnaoclaActionPerformed(evt);
            }
        });

        jLabel5.setText("Por Nome");

        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });

        jLabel6.setText("Por Prontuario");

        txtPront.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProntKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt24)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(txtcrianca)
                                .addComponent(txtidoso)
                                .addComponent(txtgravida)
                                .addComponent(txtadulto)
                                .addComponent(jLabel4)
                                .addComponent(txtemer)
                                .addComponent(txturgen)
                                .addComponent(txtpouco)
                                .addComponent(txtnaour)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                                .addComponent(jSeparator2)
                                .addComponent(txtnaocla)
                                .addComponent(jLabel5)
                                .addComponent(jSeparator4)
                                .addComponent(jSeparator5)
                                .addComponent(txtNome, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel6)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtidade, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(txtPront, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 877, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(9, 9, 9)
                .addComponent(txtPront, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtcrianca)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtidoso)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtgravida)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtadulto)
                .addGap(18, 18, 18)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtemer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txturgen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtpouco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtnaour)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtnaocla)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pronto Atendimento", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1127, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 657, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Internados", jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txt24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt24ActionPerformed
      if (txt24.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.Filtrar24horas();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txt24ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        Listar();
    }//GEN-LAST:event_formWindowActivated

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void txtidadeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidadeKeyReleased
        txtidade.addKeyListener(new KeyAdapter() {
    @Override
    public void keyReleased(KeyEvent e) {
        String idadeFiltro = txtidade.getText().trim();
        
        ProntuarioDAO dao = new ProntuarioDAO();
        List<Prontuario> lista = dao.FiltrarIdade(); 
        
        DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
        dados.setNumRows(0); 

        for (Prontuario u : lista) {
            String idadePaciente = u.getDado().getIdade(); 
            
            
            if (idadeFiltro.isEmpty() || idadePaciente.equals(idadeFiltro)) {
                dados.addRow(new Object[]{
                        u.getProntuario(),
                        u.getDado().getNome(),
                         
                        u.getCla().getClassificacao(),
                        u.getPre().getNome(),
                        u.getTempoEspera(),
                        idadePaciente
                        
                });
            }
        }
    }
});

    }//GEN-LAST:event_txtidadeKeyReleased

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased
        String user = "%"+txtNome.getText()+"%";
     ProntuarioDAO dao = new ProntuarioDAO();
        List<Prontuario> lista = dao.FiltrarNome(user); 
        DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
        dados.setNumRows(0); 
     for(Prontuario u : lista){
         dados.addRow(new Object[]{
         u.getProntuario(),
         u.getDado().getNome(),
         u.getCla().getClassificacao(),
         u.getPre().getNome(),
         u.getTempoEspera(),
         
     });
     }
    }//GEN-LAST:event_txtNomeKeyReleased

    private void txtProntKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProntKeyReleased
        String user = "%"+txtPront.getText()+"%";
     ProntuarioDAO dao = new ProntuarioDAO();
        List<Prontuario> lista = dao.FiltrarProntuario(user); 
        DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
        dados.setNumRows(0); 
     for(Prontuario u : lista){
         dados.addRow(new Object[]{
         u.getProntuario(),
         u.getDado().getNome(),
         u.getCla().getClassificacao(),
         u.getPre().getNome(),
         u.getTempoEspera(),
         
     });
     }
    }//GEN-LAST:event_txtProntKeyReleased

    private void txtcriancaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtcriancaActionPerformed
        if (txtcrianca.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.FiltrarCrianca();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txtcriancaActionPerformed

    private void txtidosoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidosoActionPerformed
        if (txtidoso.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.FiltrarIdoso();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txtidosoActionPerformed

    private void txtgravidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgravidaActionPerformed
        if (txtgravida.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.FiltrarGravida();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txtgravidaActionPerformed

    private void txtadultoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtadultoActionPerformed

      if (txtadulto.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.FiltrarAdulto();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txtadultoActionPerformed

    private void txtemerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemerActionPerformed
        if (txtemer.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.FiltrarEmergencia();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txtemerActionPerformed

    private void txturgenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txturgenActionPerformed
        if (txturgen.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.FiltrarUrgente();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txturgenActionPerformed

    private void txtpoucoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtpoucoActionPerformed
        if (txtpouco.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.FiltrarPoucoUrgente();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txtpoucoActionPerformed

    private void txtnaourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnaourActionPerformed
        if (txtnaour.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.FiltrarNaoUrgente();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txtnaourActionPerformed

    private void txtnaoclaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnaoclaActionPerformed
        if (txtnaocla.isSelected()) {  
            ProntuarioDAO dao = new ProntuarioDAO();
            List<Prontuario> lista = dao.FiltrarNaoClassificado();
            DefaultTableModel dados = (DefaultTableModel) Tabela.getModel();
            dados.setNumRows(0);
            for(Prontuario u : lista){
                dados.addRow(new Object[]{
                 u.getProntuario(),           
                 u.getDado().getNome(),           
                 u.getCla().getClassificacao(),   
                 u.getPre().getNome(),            
                 u.getTempoEspera()

            });
    }}else{
          Listar();
      }
    }//GEN-LAST:event_txtnaoclaActionPerformed

    private void TabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaMouseClicked
       
 int linhaSelecionada = Tabela.getSelectedRow();

        // Verifica se uma linha foi selecionada
        if (linhaSelecionada != -1) {
            // Obtém o nome da coluna "Nome"
            int prontuarioSelecionado = (int) Tabela.getValueAt(linhaSelecionada, 0);
            String nomeSelecionado = (String) Tabela.getValueAt(linhaSelecionada, 1);
            
            // Passa o nome selecionado para a janela PEP
            if (frmPEP != null) {
                frmPEP.atualizarNomaePaciente(prontuarioSelecionado,nomeSelecionado);
                frmPEP.atualizarCDC();
                
                
            }
            
            
             
             

            
            dispose();
        }
    
    }//GEN-LAST:event_TabelaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmLocalizarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmLocalizarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmLocalizarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmLocalizarPaciente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmLocalizarPaciente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable Tabela;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JCheckBox txt24;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPront;
    private javax.swing.JCheckBox txtadulto;
    private javax.swing.JCheckBox txtcrianca;
    private javax.swing.JCheckBox txtemer;
    private javax.swing.JCheckBox txtgravida;
    private javax.swing.JTextField txtidade;
    private javax.swing.JCheckBox txtidoso;
    private javax.swing.JCheckBox txtnaocla;
    private javax.swing.JCheckBox txtnaour;
    private javax.swing.JCheckBox txtpouco;
    private javax.swing.JCheckBox txturgen;
    // End of variables declaration//GEN-END:variables
}
